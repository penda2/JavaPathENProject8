name: CI Pipeline          # Nom du workflow

on:
  push:                    # Déclenche sur chaque push
    branches:
      - master
  pull_request:            # Déclenche pour chaque pull request sur la branche `master`

jobs:
  build:
    runs-on: ubuntu-latest  # Système d'exploitation utilisé

    steps:
      # Étape 1 : Checkout
      - name: Checkout source code
        uses: actions/checkout@v4

      # Étape 2 : Setup Java
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'   

      # Étape 3 : Build (Compilation)
      - name: Compile the project
        run: | 
          cd JavaPathENProject8/JavaPathENProject8/tourguide
          mvn clean compile                  # Compile le code source avec Maven
        continue-on-error: false

  test:
    runs-on: ubuntu-latest
    needs: build                  # Dépend de l'étape de build pour exécuter les tests

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'

      - name: Run tests
        run: mvn test             # Exécute les tests unitaires avec Maven

  package:
    runs-on: ubuntu-latest
    needs: test                   # Dépend de l'étape de test

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'

      - name: Package the application
        run: mvn package -DskipTests  # Crée l’artefact sans réexécuter les tests
        continue-on-error: false

      # Artefact : sauvegarde le fichier JAR
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: application-jar
          path: target/*.jar       # Spécifie le fichier `.jar` dans le dossier `target`
